<div class="main-container">
  <%# <%= current_user.username %>
    <div class="logo-container">
      <img src="/assets/backtracklogosmall.png" alt="Logo">
    </div>

        <div class="logo-container">
      <%# <%= image_tag image_proxy_path(url: 'https://scontent-lcy1-1.cdninstagram.com/v/t51.2885-19/352158661_639850591025663_661681514093436606_n.jpg?stp=dst-jpg_s320x320&_nc_ht=scontent-lcy1-1.cdninstagram.com&_nc_cat=111&_nc_ohc=HhuGXo3fSnYAX_jLLLl&edm=AOQ1c0wBAAAA&ccb=7-5&oh=00_AfCex6oO4s0rF91vN5Tj_2aghlyY-cyKw9Ar5GAnkF3zjg&oe=648E12C5&_nc_sid=f70a57') %>
            <%# <%= image_tag 'https://scontent-lcy1-1.cdninstagram.com/v/t51.2885-19/352158661_639850591025663_661681514093436606_n.jpg?stp=dst-jpg_s320x320&_nc_ht=scontent-lcy1-1.cdninstagram.com&_nc_cat=111&_nc_ohc=HhuGXo3fSnYAX_jLLLl&edm=AOQ1c0wBAAAA&ccb=7-5&oh=00_AfCex6oO4s0rF91vN5Tj_2aghlyY-cyKw9Ar5GAnkF3zjg&oe=648E12C5&_nc_sid=f70a57' %>
    </div>

  <div id="map"></div>

  <div id="latitude"></div>
  <div id="longitude"></div>

    <div id="note"></div>

    <div id="latitude-from-ip">from ip: <%= @latitude_from_ip %></div>
    <div id="longitude-from-ip">from ip: <%= @longitude_from_ip %></div>

  <div class="friends-dropdown">
    <button id="friends-dropdown-button">Friendsies</button>
    <div class="friends-dropdown-content">
      <%= form_with url: request_friend_path, method: :post, class: 'add-friend', local: true do |form| %>
        <%# <%= form.label :username %>
        <%= form.text_field :username %>
        <%= form.submit 'Add friend' %>
      <% end %>
      <div id="friend-requests">
        <% if current_user.pending_request_ids && current_user.pending_request_ids.length > 0 %>
        <span class="requests-text">Requests</span>
        <ul>
          <% current_user.pending_request_ids.each do |id| %>
            <% user = User.find_by(id: id) %>
            <li><div><%= user.first_name %> (<a href="https://www.instagram.com/<%= user.username %>" target="_blank">@<%= user.username %></a>)</div>
              <div class="accept-reject">
                <%= button_to 'Accept', accept_friend_path(user_id: user.id), method: :post %>
                <%= button_to 'Reject', reject_friend_path(user_id: user.id), method: :post %>
              <div>
            </li>
          <% end %>
          </ul>
        <% end %>
        <% friend_ids_array = User.joins("INNER JOIN friendships ON friendships.user_id = users.id OR friendships.friend_id = users.id").where('friendships.user_id = ? OR friendships.friend_id = ?', current_user.id, current_user.id).where.not(id: current_user.id).distinct.pluck(:id) %>
        <% if friend_ids_array.length > 0 %>
        <span class="requests-text">Friends</span>
        <ul>
          <% friend_ids_array.each do |id| %>
          <% friend = User.find_by(id: id) %>
            <li><div><%= friend.first_name %> (<a href="https://www.instagram.com/<%= friend.username %>" target="_blank">@<%= friend.username %></a>)</div>
            </li>
          <% end %>
          </ul>
        <% end %>
      </div>
    </div>
  </div>
</div>

<!-- Include Leaflet JS directly -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>

<script>


// creating a location instance on load so friends can see where you are
document.addEventListener("DOMContentLoaded", function() {
  // Retrieve the CSRF token from the meta tag
  var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content')

  // Create the data string including the location parameters
  var data = "location[latitude]=<%= session[:latitude] %>&location[longitude]=<%= session[:longitude] %>"

  // Make an AJAX request to the create action
  var xhr = new XMLHttpRequest()
  xhr.open("POST", "/locations", true)
  xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
  xhr.setRequestHeader("X-CSRF-Token", csrfToken)
  xhr.send(data)
})

  const button = document.getElementById('friends-dropdown-button')
  const dropdownContent = document.querySelector('.friends-dropdown-content')

  button.addEventListener('click', () => {
    dropdownContent.classList.toggle('active')
  })


window.onload = function() {

var map

// Adding all markers to the map
function addMarkersToMap(given_latitude, given_longitude) {
  // Getting an array of all the current user's friends
  <% friend_ids_array = User.joins("INNER JOIN friendships ON friendships.user_id = users.id OR friendships.friend_id = users.id").where('friendships.user_id = ? OR friendships.friend_id = ?', current_user.id, current_user.id).where.not(id: current_user.id).distinct.pluck(:id) %>
  <% friend_locations = Location.where(user_id: friend_ids_array, current_location: true) %>
    <% friend_locations.each do |l| %>

      var redIcon = L.icon({
        iconUrl: "https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png",
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
      })
// adding markers for friends locations
      // var marker = L.marker([<%= l.latitude %>, <%= l.longitude %>], {icon: redIcon}).addTo(map)
      //   .bindPopup("<%= l.user_id == current_user.id ? "You #{current_user.id} #{current_user.username} #{l.id}" : " #{User.find_by(id: l.user_id).username} #{l.id} " %> ").openPopup()
      var marker = L.marker([<%= l.latitude %>, <%= l.longitude %>], {icon: redIcon}).addTo(map)
        .bindPopup(`<p><%= User.find_by(id: l.user_id).first_name %> (<a href="https://www.instagram.com/<%= User.find_by(id: l.user_id).username %>" target="_blank">@<%= User.find_by(id: l.user_id).username %></a>)</p>`).openPopup()
  <% end %>

  if (given_latitude && given_longitude) {
  // adding marker for your own location (not taken from database)
      var marker = L.marker([given_latitude, given_longitude], {icon: L.icon({
          iconUrl: "https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png",
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
          iconSize: [25, 41],
          iconAnchor: [12, 41],
          popupAnchor: [1, -34],
          shadowSize: [41, 41]
        })}).addTo(map)
      .bindPopup("<%= "You" %>").openPopup()
  }
}

navigator.geolocation.getCurrentPosition(function(position) {
  var latitude = position.coords.latitude
  var longitude = position.coords.longitude

  // send the location data to the server-side.
  $.ajax({
    url: '/locations',
    type: 'GET',
    dataType: 'json',
    data: { latitude: latitude, longitude: longitude },
    success: function(data) {
      // handle the server-side response
    }
  })
})

  // Setting the loading position of the map
  if (navigator.geolocation === false) {
    document.getElementById('note').textContent = `navigator.geolocation is true`;
    console.log("using geolocation")
    navigator.geolocation.getCurrentPosition(function(position) {
      var newLongitude = position.coords.longitude
      var newLatitude = position.coords.latitude

      document.getElementById('latitude').textContent = `latitude from geo: ${newLatitude}`;
      document.getElementById('longitude').textContent = `longitude from geo: ${newLongitude}`;

      map = L.map('map').setView([newLatitude, newLongitude], 100)
      // L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      //   attribution: 'Map data &copy OpenStreetMap contributors'
      // }).addTo(map)
      L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {
    attribution: 'Map data &copy Esri'
  }).addTo(map)

      addMarkersToMap(newLatitude, newLongitude)
      map.setView([newLatitude, newLongitude], 13)
    })
  } else {


      document.getElementById('latitude').textContent = `latitude from ip, being used: ${<%= @latitude_from_ip %>}`;
      document.getElementById('longitude').textContent = `longitude from ip, being used: ${<%= @longitude_from_ip %>}`;
    console.log(`using ip address, latitude is ${<%= @latitude_from_ip %>}`)

      map = L.map('map').setView([<%= @latitude_from_ip %>, <%= @longitude_from_ip %>], 100)
      L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {
      attribution: 'Map data &copy Esri'
      }).addTo(map)

      addMarkersToMap()
      map.setView([<%= @latitude_from_ip %>, <%= @longitude_from_ip %>], 13)
  }
};

</script>
